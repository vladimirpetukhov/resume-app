<div col-8 offset-3>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><table><tr><td><pre style="margin: 0; line-height: 125%"> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78</pre></td><td><pre style="margin: 0; line-height: 125%"><span style="color: #66d9ef">namespace</span> <span style="color: #f8f8f2">_03.HalvingMethod</span>
<span style="color: #f8f8f2">{</span>
    <span style="color: #66d9ef">using</span> <span style="color: #f8f8f2">System;</span>
    <span style="color: #66d9ef">using</span> <span style="color: #f8f8f2">System.Text;</span>

    <span style="color: #75715e">/*</span>
<span style="color: #75715e">     * Prove that the equation 𝑥 = 𝜀.𝑠𝑖𝑛𝑥 + 𝑎 has a single real root for each 𝜀 ∈ (0, 1).</span>
<span style="color: #75715e">     * Find the root with an accuracy of 0.001 for 𝜀 = 0.558 and 𝑎 = 1.</span>
<span style="color: #75715e">     */</span>
    <span style="color: #66d9ef">public</span> <span style="color: #66d9ef">class</span> <span style="color: #a6e22e">Program</span>
    <span style="color: #f8f8f2">{</span>

        <span style="color: #75715e">//𝑥 = 𝜀.𝑠𝑖𝑛𝑥 + 𝑎</span>
        <span style="color: #66d9ef">public</span> <span style="color: #66d9ef">static</span> <span style="color: #66d9ef">double</span> <span style="color: #a6e22e">Func_p</span><span style="color: #f8f8f2">(</span><span style="color: #66d9ef">double</span> <span style="color: #f8f8f2">p,</span> <span style="color: #66d9ef">double</span> <span style="color: #f8f8f2">a,</span> <span style="color: #66d9ef">double</span> <span style="color: #f8f8f2">e)</span>
        <span style="color: #f8f8f2">{</span>
            <span style="color: #66d9ef">double</span> <span style="color: #f8f8f2">result</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">e</span> <span style="color: #f8f8f2">*</span> <span style="color: #f8f8f2">Math.Sin(p)</span> <span style="color: #f8f8f2">+</span> <span style="color: #f8f8f2">a</span> <span style="color: #f8f8f2">-</span> <span style="color: #f8f8f2">p;</span>
            <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">Math.Round(result,</span> <span style="color: #ae81ff">3</span><span style="color: #f8f8f2">);</span>
        <span style="color: #f8f8f2">}</span>

        <span style="color: #66d9ef">public</span> <span style="color: #66d9ef">static</span> <span style="color: #66d9ef">void</span> <span style="color: #a6e22e">Main</span><span style="color: #f8f8f2">()</span>
        <span style="color: #f8f8f2">{</span>
            <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #e6db74">&quot;Add start point: &quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">a</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">double</span><span style="color: #f8f8f2">.Parse(Console.ReadLine());</span>

            <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #e6db74">&quot;Add end point: &quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">b</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">double</span><span style="color: #f8f8f2">.Parse(Console.ReadLine());</span>


            <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #e6db74">&quot;Add epsilon: &quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">arg1</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">double</span><span style="color: #f8f8f2">.Parse(Console.ReadLine());</span>

            <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #e6db74">&quot;Add a: &quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">arg2</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">double</span><span style="color: #f8f8f2">.Parse(Console.ReadLine());</span>

            <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #e6db74">&quot;Add precision: &quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">precision</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">double</span><span style="color: #f8f8f2">.Parse(Console.ReadLine());</span>


            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">i</span> <span style="color: #f8f8f2">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">;</span>
            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">n</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Math.Ceiling(Math.Log2((b</span> <span style="color: #f8f8f2">-</span> <span style="color: #f8f8f2">a)</span> <span style="color: #f8f8f2">/</span> <span style="color: #f8f8f2">Math.Pow(</span><span style="color: #ae81ff">10</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">-</span><span style="color: #ae81ff">3</span><span style="color: #f8f8f2">)));</span>

            <span style="color: #f8f8f2">StringBuilder</span> <span style="color: #f8f8f2">sb</span> <span style="color: #f8f8f2">=</span> <span style="color: #66d9ef">new</span> <span style="color: #f8f8f2">StringBuilder();</span>

            <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">result</span> <span style="color: #f8f8f2">=</span> <span style="color: #ae81ff">0d</span><span style="color: #f8f8f2">;</span>

            <span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">(n</span> <span style="color: #f8f8f2">&gt;</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">)</span>
            <span style="color: #f8f8f2">{</span>
                <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">Fa</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Func_p(a,</span> <span style="color: #f8f8f2">arg2,</span> <span style="color: #f8f8f2">arg1);</span>
                <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">Fb</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Func_p(b,</span> <span style="color: #f8f8f2">arg2,</span> <span style="color: #f8f8f2">arg1);</span>

                

                <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">p</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">(a</span> <span style="color: #f8f8f2">+</span> <span style="color: #f8f8f2">b)</span> <span style="color: #f8f8f2">/</span> <span style="color: #ae81ff">2</span><span style="color: #f8f8f2">;</span>
                <span style="color: #66d9ef">var</span> <span style="color: #f8f8f2">Fp</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Func_p(p,</span> <span style="color: #f8f8f2">arg2,</span> <span style="color: #f8f8f2">arg1);</span>
                <span style="color: #f8f8f2">Console.WriteLine(</span><span style="color: #960050; background-color: #1e0010">$</span><span style="color: #e6db74">&quot;{10-n} - a: {a} - b: {b} - p: {p}&quot;</span><span style="color: #f8f8f2">);</span>
                
                <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">(Fp</span> <span style="color: #f8f8f2">==</span> <span style="color: #ae81ff">0</span> <span style="color: #f8f8f2">||</span> <span style="color: #f8f8f2">(b</span> <span style="color: #f8f8f2">-</span> <span style="color: #f8f8f2">a)</span> <span style="color: #f8f8f2">/</span> <span style="color: #ae81ff">2</span> <span style="color: #f8f8f2">&lt;</span> <span style="color: #f8f8f2">precision)</span>
                <span style="color: #f8f8f2">{</span>
                    <span style="color: #f8f8f2">result</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Fp;</span>
                    <span style="color: #66d9ef">return</span><span style="color: #f8f8f2">;</span>
                <span style="color: #f8f8f2">}</span>
                <span style="color: #66d9ef">else</span> <span style="color: #a6e22e">if</span> <span style="color: #f8f8f2">(Fa</span> <span style="color: #f8f8f2">*</span> <span style="color: #f8f8f2">Fp</span> <span style="color: #f8f8f2">&lt;</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">)</span>
                <span style="color: #f8f8f2">{</span>
                    <span style="color: #f8f8f2">b</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">p;</span>
                <span style="color: #f8f8f2">}</span>
                <span style="color: #66d9ef">else</span>
                <span style="color: #f8f8f2">{</span>
                    <span style="color: #f8f8f2">a</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">p;</span>
                <span style="color: #f8f8f2">}</span>

                <span style="color: #f8f8f2">n--;</span>
                <span style="color: #f8f8f2">result</span> <span style="color: #f8f8f2">=</span> <span style="color: #f8f8f2">Fp;</span>
            <span style="color: #f8f8f2">}</span>


        <span style="color: #f8f8f2">}</span>
    <span style="color: #f8f8f2">}</span>
<span style="color: #f8f8f2">}</span>
</pre></td></tr></table></div>

</div>