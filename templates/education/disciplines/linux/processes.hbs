<div class="col-8 offset-4">
    <div class="col-12" style="color: #a6e22e;font-size:1.5em">
        <p>Program TempFileGenerator:
            Write a program (‘tempgen.c’), which takes 1 argument: files_count.
            The program should generate
            files_count files called ‘temp<nr>.tmp’ (where nris between 1and
                files_count). Each file is created by a
                separate process and contains 1000times the pid of the
                corresponding process as text(pid=1001 should
                take 4 bytes per ID).
                The parentprocess should notify after each file is created.
                Modify the program or write a new one, in which the processes
                write only in one file, where the pid
                sequences do not overlap (we have 1000 times pid_file_1, then
                1000 times pid_file_2… then 1000 times
                pid_files_cound).</p>
        </div>
        <!-- HTML generated using hilite.me --><div style="background: #272822;
            overflow:auto;width:auto;border:solid gray;border-width:.1em .1em
            .1em .8em;padding:.2em .6em;"><table><tr><td><pre style="margin: 0;
                            line-height: 125%"> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26</pre></td><td><pre
                            style="margin: 0; line-height: 125%"><span style="color: #75715e">#include &lt;stdlib.h&gt;</span>
<span style="color: #75715e">#include &lt;string.h&gt;</span>
<span style="color: #75715e">#include &lt;unistd.h&gt;</span>
<span style="color: #75715e">#include &lt;sys/types.h&gt;</span>
<span style="color: #75715e">#include &lt;sys/wait.h&gt;</span>
<span style="color: #75715e">#include &lt;stdio.h&gt;</span>


<span style="color: #66d9ef">int</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">(</span><span style="color: #66d9ef">int</span> <span style="color: #f8f8f2">argc,</span> <span style="color: #66d9ef">char</span> <span style="color: #f92672">*</span> <span style="color: #f8f8f2">argv[]){</span>
    <span style="color: #66d9ef">int</span>  <span style="color: #f8f8f2">file_count</span><span style="color: #f92672">=</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">;</span>
    <span style="color: #66d9ef">char</span> <span style="color: #f8f8f2">filename[</span><span style="color: #ae81ff">100</span><span style="color: #f8f8f2">];</span>
    <span style="color: #f8f8f2">file_count</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">10</span><span style="color: #f8f8f2">;</span>
    <span style="color: #66d9ef">FILE</span> <span style="color: #f92672">*</span><span style="color: #f8f8f2">fd;</span>

    <span style="color: #66d9ef">for</span><span style="color: #f8f8f2">(</span><span style="color: #66d9ef">int</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">;</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">&lt;=</span> <span style="color: #f8f8f2">file_count;</span> <span style="color: #f8f8f2">i</span><span style="color: #f92672">++</span><span style="color: #f8f8f2">){</span>
        <span style="color: #66d9ef">int</span> <span style="color: #f8f8f2">pid</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">fork();</span>
        <span style="color: #66d9ef">if</span><span style="color: #f8f8f2">(pid</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">){</span>
            <span style="color: #f8f8f2">sprintf(filename,</span><span style="color: #e6db74">&quot;temp%d.tmp&quot;</span><span style="color: #f8f8f2">,i);</span>
            <span style="color: #f8f8f2">fd</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">fopen(filename,</span><span style="color: #e6db74">&quot;w+&quot;</span><span style="color: #f8f8f2">);</span>
            <span style="color: #66d9ef">for</span><span style="color: #f8f8f2">(</span><span style="color: #66d9ef">int</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">;</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">&lt;</span> <span style="color: #ae81ff">1000</span><span style="color: #f8f8f2">;</span> <span style="color: #f8f8f2">i</span><span style="color: #f92672">++</span><span style="color: #f8f8f2">){fprintf(fd,</span><span style="color: #e6db74">&quot;%d &quot;</span><span style="color: #f8f8f2">,getpid());}</span>
            <span style="color: #f8f8f2">fclose(fd);</span>
            <span style="color: #f8f8f2">exit(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">);</span>
        <span style="color: #f8f8f2">}</span><span style="color: #66d9ef">else</span><span style="color: #f8f8f2">{printf(</span><span style="color: #e6db74">&quot;Process with the PID %i created file temp%i.tmp</span><span style="color: #ae81ff">\n</span><span style="color: #e6db74">&quot;</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">pid,i);</span>
            <span style="color: #f8f8f2">wait(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">);}</span>
    <span style="color: #f8f8f2">}</span>
<span style="color: #f8f8f2">}</span>
</pre></td></tr></table></div>
    </div>